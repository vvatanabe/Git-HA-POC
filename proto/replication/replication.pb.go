// Code generated by protoc-gen-go. DO NOT EDIT.
// source: replication/replication.proto

package replication

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Repository struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Repo                 string   `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_36da0b8129c7cf1c, []int{0}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Repository) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

type ReplicateRepositoryRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	RemoteUrl            string      `protobuf:"bytes,2,opt,name=remote_url,json=remoteUrl,proto3" json:"remote_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReplicateRepositoryRequest) Reset()         { *m = ReplicateRepositoryRequest{} }
func (m *ReplicateRepositoryRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicateRepositoryRequest) ProtoMessage()    {}
func (*ReplicateRepositoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_36da0b8129c7cf1c, []int{1}
}

func (m *ReplicateRepositoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicateRepositoryRequest.Unmarshal(m, b)
}
func (m *ReplicateRepositoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicateRepositoryRequest.Marshal(b, m, deterministic)
}
func (m *ReplicateRepositoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicateRepositoryRequest.Merge(m, src)
}
func (m *ReplicateRepositoryRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicateRepositoryRequest.Size(m)
}
func (m *ReplicateRepositoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicateRepositoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicateRepositoryRequest proto.InternalMessageInfo

func (m *ReplicateRepositoryRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *ReplicateRepositoryRequest) GetRemoteUrl() string {
	if m != nil {
		return m.RemoteUrl
	}
	return ""
}

type ReplicateRepositoryResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicateRepositoryResponse) Reset()         { *m = ReplicateRepositoryResponse{} }
func (m *ReplicateRepositoryResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicateRepositoryResponse) ProtoMessage()    {}
func (*ReplicateRepositoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_36da0b8129c7cf1c, []int{2}
}

func (m *ReplicateRepositoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicateRepositoryResponse.Unmarshal(m, b)
}
func (m *ReplicateRepositoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicateRepositoryResponse.Marshal(b, m, deterministic)
}
func (m *ReplicateRepositoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicateRepositoryResponse.Merge(m, src)
}
func (m *ReplicateRepositoryResponse) XXX_Size() int {
	return xxx_messageInfo_ReplicateRepositoryResponse.Size(m)
}
func (m *ReplicateRepositoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicateRepositoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicateRepositoryResponse proto.InternalMessageInfo

func (m *ReplicateRepositoryResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Repository)(nil), "replication.Repository")
	proto.RegisterType((*ReplicateRepositoryRequest)(nil), "replication.ReplicateRepositoryRequest")
	proto.RegisterType((*ReplicateRepositoryResponse)(nil), "replication.ReplicateRepositoryResponse")
}

func init() { proto.RegisterFile("replication/replication.proto", fileDescriptor_36da0b8129c7cf1c) }

var fileDescriptor_36da0b8129c7cf1c = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xa9, 0x88, 0xd0, 0xa9, 0xa7, 0xf5, 0x60, 0xa9, 0x14, 0x24, 0x17, 0x7b, 0x69, 0x42,
	0x5b, 0xc1, 0xbb, 0x8f, 0xb0, 0xe2, 0xc5, 0x8b, 0x6c, 0xe2, 0xd0, 0x2c, 0xa4, 0x99, 0x75, 0x76,
	0x12, 0xf0, 0xe2, 0xb3, 0xcb, 0x6e, 0x8a, 0x5d, 0x24, 0xd2, 0xdb, 0xc7, 0x8f, 0xfd, 0xfe, 0x2c,
	0x03, 0x4b, 0x46, 0xd7, 0xd8, 0xca, 0x88, 0xa5, 0xb6, 0x48, 0x74, 0xee, 0x98, 0x84, 0xd4, 0x2c,
	0x41, 0xd9, 0x23, 0x80, 0x46, 0x47, 0xde, 0x0a, 0xf1, 0x97, 0x52, 0x70, 0xd9, 0x79, 0xe4, 0xf9,
	0xe4, 0x7e, 0xb2, 0x9a, 0xea, 0xa8, 0x03, 0x63, 0x74, 0x34, 0xbf, 0x18, 0x58, 0xd0, 0x99, 0xc0,
	0x42, 0x1f, 0x43, 0xf0, 0x64, 0xd7, 0xf8, 0xd9, 0xa1, 0x17, 0xf5, 0x04, 0xc0, 0xbf, 0x30, 0x66,
	0xcd, 0xb6, 0xb7, 0x79, 0x3a, 0x24, 0xf1, 0x24, 0x4f, 0xd5, 0x32, 0x18, 0x0f, 0x24, 0xf8, 0xde,
	0x71, 0x73, 0x2c, 0x9c, 0x0e, 0xe4, 0x95, 0x9b, 0x6c, 0x03, 0x77, 0xa3, 0xad, 0xde, 0x51, 0xeb,
	0x31, 0x0c, 0xfd, 0x30, 0x62, 0x62, 0xe1, 0xb5, 0x8e, 0x7a, 0xfb, 0x0d, 0x4a, 0x9f, 0x7a, 0x5f,
	0x90, 0x7b, 0x5b, 0xa1, 0xaa, 0xe1, 0x66, 0x24, 0x48, 0x3d, 0xfc, 0xdd, 0xf8, 0xcf, 0x07, 0x17,
	0xab, 0xf3, 0x0f, 0x87, 0x4d, 0xcf, 0xbb, 0xb7, 0xcd, 0xde, 0x4a, 0xdd, 0x95, 0x79, 0x45, 0x87,
	0xa2, 0xef, 0x8d, 0x98, 0xd6, 0x94, 0x58, 0xec, 0xad, 0xac, 0x6b, 0xb3, 0x76, 0x54, 0x15, 0xf1,
	0x28, 0xe9, 0x99, 0xca, 0xab, 0x88, 0x76, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x88, 0x95,
	0x14, 0xc8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReplicationServiceClient is the client API for ReplicationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReplicationServiceClient interface {
	ReplicateRepository(ctx context.Context, in *ReplicateRepositoryRequest, opts ...grpc.CallOption) (*ReplicateRepositoryResponse, error)
}

type replicationServiceClient struct {
	cc *grpc.ClientConn
}

func NewReplicationServiceClient(cc *grpc.ClientConn) ReplicationServiceClient {
	return &replicationServiceClient{cc}
}

func (c *replicationServiceClient) ReplicateRepository(ctx context.Context, in *ReplicateRepositoryRequest, opts ...grpc.CallOption) (*ReplicateRepositoryResponse, error) {
	out := new(ReplicateRepositoryResponse)
	err := c.cc.Invoke(ctx, "/replication.ReplicationService/ReplicateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReplicationServiceServer is the server API for ReplicationService service.
type ReplicationServiceServer interface {
	ReplicateRepository(context.Context, *ReplicateRepositoryRequest) (*ReplicateRepositoryResponse, error)
}

// UnimplementedReplicationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReplicationServiceServer struct {
}

func (*UnimplementedReplicationServiceServer) ReplicateRepository(ctx context.Context, req *ReplicateRepositoryRequest) (*ReplicateRepositoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicateRepository not implemented")
}

func RegisterReplicationServiceServer(s *grpc.Server, srv ReplicationServiceServer) {
	s.RegisterService(&_ReplicationService_serviceDesc, srv)
}

func _ReplicationService_ReplicateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicateRepositoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicationServiceServer).ReplicateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/replication.ReplicationService/ReplicateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicationServiceServer).ReplicateRepository(ctx, req.(*ReplicateRepositoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReplicationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "replication.ReplicationService",
	HandlerType: (*ReplicationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReplicateRepository",
			Handler:    _ReplicationService_ReplicateRepository_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "replication/replication.proto",
}
