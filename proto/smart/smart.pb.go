// Code generated by protoc-gen-go. DO NOT EDIT.
// source: smart/smart.proto

package smart

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Service int32

const (
	Service_UNKNOWN      Service = 0
	Service_UPLOAD_PACK  Service = 1
	Service_RECEIVE_PACK Service = 2
)

var Service_name = map[int32]string{
	0: "UNKNOWN",
	1: "UPLOAD_PACK",
	2: "RECEIVE_PACK",
}

var Service_value = map[string]int32{
	"UNKNOWN":      0,
	"UPLOAD_PACK":  1,
	"RECEIVE_PACK": 2,
}

func (x Service) String() string {
	return proto.EnumName(Service_name, int32(x))
}

func (Service) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_359c7eba2c910705, []int{0}
}

type Repository struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Repo                 string   `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_359c7eba2c910705, []int{0}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Repository) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

type UploadPackRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Data                 []byte      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UploadPackRequest) Reset()         { *m = UploadPackRequest{} }
func (m *UploadPackRequest) String() string { return proto.CompactTextString(m) }
func (*UploadPackRequest) ProtoMessage()    {}
func (*UploadPackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_359c7eba2c910705, []int{1}
}

func (m *UploadPackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadPackRequest.Unmarshal(m, b)
}
func (m *UploadPackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadPackRequest.Marshal(b, m, deterministic)
}
func (m *UploadPackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadPackRequest.Merge(m, src)
}
func (m *UploadPackRequest) XXX_Size() int {
	return xxx_messageInfo_UploadPackRequest.Size(m)
}
func (m *UploadPackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadPackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadPackRequest proto.InternalMessageInfo

func (m *UploadPackRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UploadPackRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type UploadPackResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadPackResponse) Reset()         { *m = UploadPackResponse{} }
func (m *UploadPackResponse) String() string { return proto.CompactTextString(m) }
func (*UploadPackResponse) ProtoMessage()    {}
func (*UploadPackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_359c7eba2c910705, []int{2}
}

func (m *UploadPackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadPackResponse.Unmarshal(m, b)
}
func (m *UploadPackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadPackResponse.Marshal(b, m, deterministic)
}
func (m *UploadPackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadPackResponse.Merge(m, src)
}
func (m *UploadPackResponse) XXX_Size() int {
	return xxx_messageInfo_UploadPackResponse.Size(m)
}
func (m *UploadPackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadPackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadPackResponse proto.InternalMessageInfo

func (m *UploadPackResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReceivePackRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Data                 []byte      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReceivePackRequest) Reset()         { *m = ReceivePackRequest{} }
func (m *ReceivePackRequest) String() string { return proto.CompactTextString(m) }
func (*ReceivePackRequest) ProtoMessage()    {}
func (*ReceivePackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_359c7eba2c910705, []int{3}
}

func (m *ReceivePackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceivePackRequest.Unmarshal(m, b)
}
func (m *ReceivePackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceivePackRequest.Marshal(b, m, deterministic)
}
func (m *ReceivePackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceivePackRequest.Merge(m, src)
}
func (m *ReceivePackRequest) XXX_Size() int {
	return xxx_messageInfo_ReceivePackRequest.Size(m)
}
func (m *ReceivePackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceivePackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReceivePackRequest proto.InternalMessageInfo

func (m *ReceivePackRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *ReceivePackRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReceivePackResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceivePackResponse) Reset()         { *m = ReceivePackResponse{} }
func (m *ReceivePackResponse) String() string { return proto.CompactTextString(m) }
func (*ReceivePackResponse) ProtoMessage()    {}
func (*ReceivePackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_359c7eba2c910705, []int{4}
}

func (m *ReceivePackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceivePackResponse.Unmarshal(m, b)
}
func (m *ReceivePackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceivePackResponse.Marshal(b, m, deterministic)
}
func (m *ReceivePackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceivePackResponse.Merge(m, src)
}
func (m *ReceivePackResponse) XXX_Size() int {
	return xxx_messageInfo_ReceivePackResponse.Size(m)
}
func (m *ReceivePackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceivePackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReceivePackResponse proto.InternalMessageInfo

func (m *ReceivePackResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type InfoRefsRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Service              Service     `protobuf:"varint,2,opt,name=service,proto3,enum=smart.Service" json:"service,omitempty"`
	Data                 []byte      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InfoRefsRequest) Reset()         { *m = InfoRefsRequest{} }
func (m *InfoRefsRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRefsRequest) ProtoMessage()    {}
func (*InfoRefsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_359c7eba2c910705, []int{5}
}

func (m *InfoRefsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRefsRequest.Unmarshal(m, b)
}
func (m *InfoRefsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRefsRequest.Marshal(b, m, deterministic)
}
func (m *InfoRefsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRefsRequest.Merge(m, src)
}
func (m *InfoRefsRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRefsRequest.Size(m)
}
func (m *InfoRefsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRefsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRefsRequest proto.InternalMessageInfo

func (m *InfoRefsRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *InfoRefsRequest) GetService() Service {
	if m != nil {
		return m.Service
	}
	return Service_UNKNOWN
}

func (m *InfoRefsRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type InfoRefsResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRefsResponse) Reset()         { *m = InfoRefsResponse{} }
func (m *InfoRefsResponse) String() string { return proto.CompactTextString(m) }
func (*InfoRefsResponse) ProtoMessage()    {}
func (*InfoRefsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_359c7eba2c910705, []int{6}
}

func (m *InfoRefsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRefsResponse.Unmarshal(m, b)
}
func (m *InfoRefsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRefsResponse.Marshal(b, m, deterministic)
}
func (m *InfoRefsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRefsResponse.Merge(m, src)
}
func (m *InfoRefsResponse) XXX_Size() int {
	return xxx_messageInfo_InfoRefsResponse.Size(m)
}
func (m *InfoRefsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRefsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRefsResponse proto.InternalMessageInfo

func (m *InfoRefsResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("smart.Service", Service_name, Service_value)
	proto.RegisterType((*Repository)(nil), "smart.Repository")
	proto.RegisterType((*UploadPackRequest)(nil), "smart.UploadPackRequest")
	proto.RegisterType((*UploadPackResponse)(nil), "smart.UploadPackResponse")
	proto.RegisterType((*ReceivePackRequest)(nil), "smart.ReceivePackRequest")
	proto.RegisterType((*ReceivePackResponse)(nil), "smart.ReceivePackResponse")
	proto.RegisterType((*InfoRefsRequest)(nil), "smart.InfoRefsRequest")
	proto.RegisterType((*InfoRefsResponse)(nil), "smart.InfoRefsResponse")
}

func init() { proto.RegisterFile("smart/smart.proto", fileDescriptor_359c7eba2c910705) }

var fileDescriptor_359c7eba2c910705 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0x4f, 0x8f, 0xd2, 0x40,
	0x14, 0xc0, 0x1d, 0xfc, 0x43, 0x7c, 0x25, 0x50, 0x46, 0xa3, 0xd0, 0x93, 0xe1, 0x60, 0xaa, 0x06,
	0xaa, 0xe8, 0xc5, 0x8b, 0x09, 0x22, 0x21, 0x88, 0x81, 0x66, 0x08, 0x9a, 0xe0, 0x61, 0x33, 0x94,
	0x01, 0x9a, 0x05, 0xa6, 0xdb, 0x19, 0x9a, 0xec, 0x75, 0xbf, 0xee, 0x7e, 0x89, 0x4d, 0x67, 0x4a,
	0xe9, 0x02, 0xbb, 0x97, 0xcd, 0x5e, 0x9a, 0xd7, 0xf7, 0x5e, 0x7e, 0xf3, 0xcb, 0x7b, 0x33, 0x50,
	0x16, 0x6b, 0x1a, 0x4a, 0x47, 0x7d, 0x1b, 0x41, 0xc8, 0x25, 0xc7, 0xcf, 0xd5, 0x4f, 0xed, 0x1b,
	0x00, 0x61, 0x01, 0x17, 0xbe, 0xe4, 0xe1, 0x25, 0xc6, 0xf0, 0x6c, 0x2b, 0x58, 0x58, 0x41, 0xef,
	0x90, 0xfd, 0x92, 0xa8, 0x38, 0xce, 0x85, 0x2c, 0xe0, 0x95, 0x9c, 0xce, 0xc5, 0x71, 0x6d, 0x02,
	0xe5, 0x71, 0xb0, 0xe2, 0x74, 0xe6, 0x52, 0xef, 0x9c, 0xb0, 0x8b, 0x2d, 0x13, 0x12, 0x7f, 0x01,
	0x08, 0x53, 0x94, 0x42, 0x18, 0xcd, 0x72, 0x43, 0x9f, 0xb9, 0x3f, 0x83, 0x64, 0x9a, 0x62, 0xf6,
	0x8c, 0x4a, 0xaa, 0xd8, 0x05, 0xa2, 0xe2, 0x9a, 0x0d, 0x38, 0xcb, 0x16, 0x01, 0xdf, 0x08, 0x96,
	0x76, 0xa2, 0x4c, 0xe7, 0x7f, 0xc0, 0x84, 0x79, 0xcc, 0x8f, 0xd8, 0x23, 0x68, 0x7c, 0x80, 0x57,
	0xb7, 0xe0, 0xf7, 0x78, 0x5c, 0x21, 0x28, 0xf5, 0x36, 0x73, 0x4e, 0xd8, 0x5c, 0x3c, 0xc0, 0xc2,
	0x86, 0xbc, 0x60, 0x61, 0xe4, 0x7b, 0x4c, 0x89, 0x14, 0x9b, 0xc5, 0xa4, 0x7f, 0xa4, 0xb3, 0x64,
	0x57, 0x4e, 0x25, 0x9e, 0x66, 0x24, 0xde, 0x83, 0xb9, 0x77, 0xb8, 0x5b, 0xf6, 0xe3, 0x77, 0xc8,
	0x27, 0x3c, 0x6c, 0x40, 0x7e, 0x3c, 0xe8, 0x0f, 0x86, 0xff, 0x06, 0xe6, 0x13, 0x5c, 0x02, 0x63,
	0xec, 0xfe, 0x19, 0xb6, 0x7e, 0x9d, 0xb9, 0xad, 0x76, 0xdf, 0x44, 0xd8, 0x84, 0x02, 0xe9, 0xb4,
	0x3b, 0xbd, 0xbf, 0x1d, 0x9d, 0xc9, 0x35, 0xaf, 0x11, 0xbc, 0x1e, 0xc5, 0x46, 0x6e, 0x7c, 0x83,
	0x3c, 0xbe, 0xda, 0x81, 0xba, 0x50, 0x74, 0xb9, 0x90, 0xfb, 0xb5, 0xe1, 0x4a, 0xa2, 0x7e, 0x74,
	0x4b, 0xac, 0xea, 0x89, 0x8a, 0xd6, 0xfd, 0x8c, 0xf0, 0x6f, 0x28, 0xc5, 0xa0, 0xcc, 0xe0, 0x71,
	0x35, 0x1d, 0xda, 0xe1, 0xa6, 0x2d, 0xeb, 0x54, 0x49, 0xb3, 0x6c, 0x84, 0x7f, 0x80, 0xd1, 0x65,
	0x72, 0x37, 0x13, 0xfc, 0x26, 0x69, 0x3e, 0x58, 0x94, 0xf5, 0xf6, 0x28, 0xaf, 0x09, 0x3f, 0xeb,
	0x93, 0x4f, 0x0b, 0x5f, 0x2e, 0xb7, 0xd3, 0x86, 0xc7, 0xd7, 0x4e, 0x14, 0x51, 0x49, 0x37, 0x74,
	0xca, 0x9c, 0x85, 0x2f, 0xeb, 0x4b, 0x5a, 0x0f, 0xb8, 0xe7, 0xa8, 0x97, 0xa4, 0x5f, 0xd5, 0xf4,
	0x85, 0xfa, 0xf9, 0x7a, 0x13, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x53, 0xb7, 0x4e, 0x6b, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SmartProtocolServiceClient is the client API for SmartProtocolService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SmartProtocolServiceClient interface {
	PostUploadPack(ctx context.Context, in *UploadPackRequest, opts ...grpc.CallOption) (SmartProtocolService_PostUploadPackClient, error)
	PostReceivePack(ctx context.Context, opts ...grpc.CallOption) (SmartProtocolService_PostReceivePackClient, error)
	GetInfoRefs(ctx context.Context, in *InfoRefsRequest, opts ...grpc.CallOption) (*InfoRefsResponse, error)
}

type smartProtocolServiceClient struct {
	cc *grpc.ClientConn
}

func NewSmartProtocolServiceClient(cc *grpc.ClientConn) SmartProtocolServiceClient {
	return &smartProtocolServiceClient{cc}
}

func (c *smartProtocolServiceClient) PostUploadPack(ctx context.Context, in *UploadPackRequest, opts ...grpc.CallOption) (SmartProtocolService_PostUploadPackClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SmartProtocolService_serviceDesc.Streams[0], "/smart.SmartProtocolService/PostUploadPack", opts...)
	if err != nil {
		return nil, err
	}
	x := &smartProtocolServicePostUploadPackClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SmartProtocolService_PostUploadPackClient interface {
	Recv() (*UploadPackResponse, error)
	grpc.ClientStream
}

type smartProtocolServicePostUploadPackClient struct {
	grpc.ClientStream
}

func (x *smartProtocolServicePostUploadPackClient) Recv() (*UploadPackResponse, error) {
	m := new(UploadPackResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *smartProtocolServiceClient) PostReceivePack(ctx context.Context, opts ...grpc.CallOption) (SmartProtocolService_PostReceivePackClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SmartProtocolService_serviceDesc.Streams[1], "/smart.SmartProtocolService/PostReceivePack", opts...)
	if err != nil {
		return nil, err
	}
	x := &smartProtocolServicePostReceivePackClient{stream}
	return x, nil
}

type SmartProtocolService_PostReceivePackClient interface {
	Send(*ReceivePackRequest) error
	CloseAndRecv() (*ReceivePackResponse, error)
	grpc.ClientStream
}

type smartProtocolServicePostReceivePackClient struct {
	grpc.ClientStream
}

func (x *smartProtocolServicePostReceivePackClient) Send(m *ReceivePackRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *smartProtocolServicePostReceivePackClient) CloseAndRecv() (*ReceivePackResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ReceivePackResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *smartProtocolServiceClient) GetInfoRefs(ctx context.Context, in *InfoRefsRequest, opts ...grpc.CallOption) (*InfoRefsResponse, error) {
	out := new(InfoRefsResponse)
	err := c.cc.Invoke(ctx, "/smart.SmartProtocolService/GetInfoRefs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SmartProtocolServiceServer is the server API for SmartProtocolService service.
type SmartProtocolServiceServer interface {
	PostUploadPack(*UploadPackRequest, SmartProtocolService_PostUploadPackServer) error
	PostReceivePack(SmartProtocolService_PostReceivePackServer) error
	GetInfoRefs(context.Context, *InfoRefsRequest) (*InfoRefsResponse, error)
}

// UnimplementedSmartProtocolServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSmartProtocolServiceServer struct {
}

func (*UnimplementedSmartProtocolServiceServer) PostUploadPack(req *UploadPackRequest, srv SmartProtocolService_PostUploadPackServer) error {
	return status.Errorf(codes.Unimplemented, "method PostUploadPack not implemented")
}
func (*UnimplementedSmartProtocolServiceServer) PostReceivePack(srv SmartProtocolService_PostReceivePackServer) error {
	return status.Errorf(codes.Unimplemented, "method PostReceivePack not implemented")
}
func (*UnimplementedSmartProtocolServiceServer) GetInfoRefs(ctx context.Context, req *InfoRefsRequest) (*InfoRefsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfoRefs not implemented")
}

func RegisterSmartProtocolServiceServer(s *grpc.Server, srv SmartProtocolServiceServer) {
	s.RegisterService(&_SmartProtocolService_serviceDesc, srv)
}

func _SmartProtocolService_PostUploadPack_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UploadPackRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SmartProtocolServiceServer).PostUploadPack(m, &smartProtocolServicePostUploadPackServer{stream})
}

type SmartProtocolService_PostUploadPackServer interface {
	Send(*UploadPackResponse) error
	grpc.ServerStream
}

type smartProtocolServicePostUploadPackServer struct {
	grpc.ServerStream
}

func (x *smartProtocolServicePostUploadPackServer) Send(m *UploadPackResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SmartProtocolService_PostReceivePack_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SmartProtocolServiceServer).PostReceivePack(&smartProtocolServicePostReceivePackServer{stream})
}

type SmartProtocolService_PostReceivePackServer interface {
	SendAndClose(*ReceivePackResponse) error
	Recv() (*ReceivePackRequest, error)
	grpc.ServerStream
}

type smartProtocolServicePostReceivePackServer struct {
	grpc.ServerStream
}

func (x *smartProtocolServicePostReceivePackServer) SendAndClose(m *ReceivePackResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *smartProtocolServicePostReceivePackServer) Recv() (*ReceivePackRequest, error) {
	m := new(ReceivePackRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SmartProtocolService_GetInfoRefs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRefsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartProtocolServiceServer).GetInfoRefs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smart.SmartProtocolService/GetInfoRefs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartProtocolServiceServer).GetInfoRefs(ctx, req.(*InfoRefsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SmartProtocolService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "smart.SmartProtocolService",
	HandlerType: (*SmartProtocolServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfoRefs",
			Handler:    _SmartProtocolService_GetInfoRefs_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PostUploadPack",
			Handler:       _SmartProtocolService_PostUploadPack_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PostReceivePack",
			Handler:       _SmartProtocolService_PostReceivePack_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "smart/smart.proto",
}
